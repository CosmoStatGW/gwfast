[calculate_forecasts_from_catalog.py]
# Name of the file containing the catalog, without the extension ``h5``.
# Type = str
fname_obs = /path/to/file
# Path to output folder, which has to exist before the script is launched.
# Type = str
fout = /path/to/dir
# Name of the waveform model.
# Type = str
wf_model = IMRPhenomD_NRTidalv2
# Size of the batch to be computed in vectorized form on each process.
# Type = int
batch_size = 1
# Number of parallel processes.
# Type = int
npools = 2
# Threshold value for the SNR to consider the event detectable.
# FIMs are computed only for events with SNR exceeding this value.
# Type = float
snr_th = 12.
# Index of the event in the catalog from which to start the calculation.
# Type = int
idx_in = 0
# Index of the event in the catalog from which to end the calculation.
# Type = int
idx_f = None
# Minimum frequency of the grid, in Hz.
# Type = float
fmin = 2.
# Maximum frequency of the grid, in Hz. If not specified, this coincides with the cut frequency of the waveform.
# Type = float
fmax = None
# Int specifying if the FIMs have to be computed (``1``) or not (``0``).
# Type = int
compute_fisher = 1
# The network of detectors to be used, separated by *single spacing*.
# Type = str
net = [ETS]
# ``json`` file containing the detector configuration, alternative to **--net** and **--psds**.
# Type = str
netfile = None
# The paths to PSDs of each detector in the network inside the folder ``psds/``, separated by *single spacing*.
# Type = str
psds = [ET-0000A-18.txt]
# Int specifying if the code has to parallelize using multiprocessing (``0``), or using MPI (``1``), suitable for clusters.
# Type = int
mpi = 0
# Duty factor of the detectors (the same is used for all detectors in a network).
# Type = float
duty_factor = 1.
# Int specifying if the results of the individual batches have to be concatenated (``1``) or not (``0``).
# Type = int
concatenate = 1
# List of parameters to fix to the fiducial values, i.e. to eliminate from the FIMs, separated by *single spacing*.
# Type = str
params_fix = [deltaLambda]
# Int specifying if the effect of the rotation of the Earth has to be included in the analysis (``1``) or not (``0``).
# Type = int
rot = 1
# Specifications of the waveform when using ``LAL`` interface, separated by *single spacing*.
# Type = str
lalargs = []
# Int specifying if, in case a network of detectors is used, the SNRs and Fishher matrices of the individual detector have to be stored (``1``) or not (``0``).
# Type = int
return_all = 0
# List of seeds to set for the duty factors in individual detectors, to help reproducibility, separated by *single spacing*.
# Type = int
seeds = []
# Int specifying if the Fisher function has to be jit compiled (``1``) or not (``0``).
# This works only if computing derivatives using JAX.
# Type = int
jit_fisher = 0
